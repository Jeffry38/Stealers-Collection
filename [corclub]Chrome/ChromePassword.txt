using System;
using System.Runtime.InteropServices;

// method found here : http://securityxploded.com/chromepassworddecryptor.php et http://insecurety.net/?p=299 et http://securityxploded.com/googlechromesecrets.php
public class ChromePassword
{
    private string m_OriginURL;
    public ChromePassword(string origin_url, string action_url, string user_element, string user_value, string pass_element, object pass_value, string submit_element, string signon_realm, int ssl_valid, int creation_date, int blacklisted)
    {
        this.m_ActionURL = action_url;
        this.m_Blacklisted = blacklisted != 0;
        this.m_CreationDate = new DateTime(creation_date * 10000000L + (new DateTime(1970, 1, 1, 0, 0, 0)).Ticks);
        this.m_OriginURL = origin_url;
        this.m_PasswordElement = pass_element;
        this.m_PasswordValue = (byte[])pass_value;
        this.m_SignonRealm = signon_realm;
        this.m_SSLValid = ssl_valid != 0;
        this.m_SubmitElement = submit_element;
        this.m_UsernameElement = user_element;
        this.m_UsernameValue = user_value;
    }

    public string OriginURL
    {
        get
        {
            return m_OriginURL;
        }
    }
    private string m_ActionURL;
    public string ActionURL
    {
        get
        {
            return m_ActionURL;
        }
    }
    private string m_UsernameElement;
    public string UsernameElement
    {
        get
        {
            return m_UsernameElement;
        }
    }
    private string m_UsernameValue;
    public string UsernameValue
    {
        get
        {
            return m_UsernameValue;
        }
    }
    private string m_PasswordElement;
    public string PasswordElement
    {
        get
        {
            return m_PasswordElement;
        }
    }

    private struct DATA_BLOB
    {
        public int cbData;
        public IntPtr pbData;
    }
    [System.Runtime.InteropServices.DllImport("kernel32.dll")]
    private static extern int LocalFree(IntPtr hMem);
    [System.Runtime.InteropServices.DllImport("crypt32.dll")]
    private static extern int CryptUnprotectData(ref DATA_BLOB pDataIn, IntPtr ppszDataDescr, IntPtr pOptionalEntropy, IntPtr pvReserved, IntPtr pPromptStruct, int dwFlags, ref DATA_BLOB pDataOut);

    private byte[] m_PasswordValue;
    public string PasswordValue
    {
        get
        {
            IntPtr ptr = Marshal.AllocHGlobal(this.m_PasswordValue.Length);
            Marshal.Copy(this.m_PasswordValue, 0, ptr, this.m_PasswordValue.Length);

            DATA_BLOB din = new DATA_BLOB();
            din.cbData = this.m_PasswordValue.Length;
            din.pbData = ptr;
            DATA_BLOB dout = new DATA_BLOB();
            CryptUnprotectData(ref din, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, 0, ref dout);

            string ret = Marshal.PtrToStringAnsi(dout.pbData, dout.cbData);

            Marshal.FreeHGlobal(ptr);

            return ret;
        }
    }
    private string m_SubmitElement;
    public string SubmitElement
    {
        get
        {
            return m_SubmitElement;
        }
    }
    private string m_SignonRealm;
    public string SignonRealm
    {
        get
        {
            return m_SignonRealm;
        }
    }
    private bool m_SSLValid;
    public bool SSLValid
    {
        get
        {
            return m_SSLValid;
        }
    }
    private DateTime m_CreationDate;
    public DateTime CreationDate
    {
        get
        {
            return m_CreationDate;
        }
    }
    private bool m_Blacklisted;
    public bool Blacklisted
    {
        get
        {
            return m_Blacklisted;
        }
    }
}
